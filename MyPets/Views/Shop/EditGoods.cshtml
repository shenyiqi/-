@model MyPets.Model.Goods

@{
    ViewBag.Title = "商品编辑";
    Layout = "~/Views/Shared/_LayoutShop.cshtml";
}

<h4>商品图片</h4>
<hr />
<div class="form-group">
    <div class="row">
        <div class="col-md-3" style="text-align:center;overflow:hidden;">
            @using (Html.BeginForm("UpdateImg", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.Hidden("id", Model.GoodsId)
                @Html.Hidden("img", "img1")
                <img src="@Url.Content(Model.GoodsImg1)" />
                <input type="file" style="margin-left:20px;" id="goodsimg1" name="goodsimg1" />
                <input type="submit" class="btn btn-info" value="更改" />
            }
        </div>
        <div class="col-md-3" style="text-align:center;overflow:hidden;">
            @using (Html.BeginForm("UpdateImg", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.Hidden("id", Model.GoodsId)
                @Html.Hidden("img", "img2")
                <img src="@Url.Content(Model.GoodsImg2)" />
                <input type="file" style="margin-left:20px;" id="goodsimg2" name="goodsimg2" />
                <input type="submit" class="btn btn-info" value="更改" />
            }
        </div>
        <div class="col-md-3" style="text-align:center;overflow:hidden;">
            @using (Html.BeginForm("UpdateImg", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.Hidden("id", Model.GoodsId)
                @Html.Hidden("img", "img3")
                <img src="@Url.Content(Model.GoodsImg3)" />
                <input type="file" style="margin-left:20px;" id="goodsimg3" name="goodsimg3" />
                <input type="submit" class="btn btn-info" value="更改" />
            }
        </div>
        <div class="col-md-3" style="text-align:center;overflow:hidden;">
            @using (Html.BeginForm("UpdateImg", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.Hidden("id", Model.GoodsId)
                @Html.Hidden("img", "img4")
                <img src="@Url.Content(Model.GoodsImg3)" />
                <input type="file" style="margin-left:20px;" id="goodsimg4" name="goodsimg4" />
                <input type="submit" class="btn btn-info" value="更改" />
            }
        </div>
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>商品详情</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.GoodsId)

        <div class="form-group">
            @Html.LabelFor(model => model.GoodsName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodsName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodsName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SeriesName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SeriesName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.SeriesName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TypeName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TypeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DetailName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DetailName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.DetailName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoodsPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodsPrice, new { htmlAttributes = new { @class = "form-control", onblur = "judgeprice()" } })
                @Html.ValidationMessageFor(model => model.GoodsPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoodsDescribe, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodsDescribe, new { htmlAttributes = new { @class = "form-control", placeholdet = "商品描述..." } })
                @Html.ValidationMessageFor(model => model.GoodsDescribe, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.IsDiscount)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.DiscountPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control", onblur = "judgedisprice()" } })
                    @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.GoodsStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodsStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodsStock, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SellNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellNum, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.SellNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GoodsRange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodsRange, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.GoodsRange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("GoodsType","Shop",new {page=1,type=Model.SeriesName })">Back to List</a>
</div>
<script>
    function judgeprice() {
        var reg = new RegExp("^[0-9]+(.[0-9]{1,2})?$");
        var price = $("#GoodsPrice").val();
        var disprice = $("#DiscountPrice").val();
        if (!reg.test(price)) {
            alert("请输入正确价格！");
            setTimeout(function () {
                document.getElementById("#GoodsPrice").focus();
            }, 500);
        }
        else {
        var a = parseFloat(price);
        var b = parseFloat(disprice);
        if (a < b) {
            alert("促销价不能大于价格");
            setTimeout(function () {
                document.getElementById("#GoodsPrice").focus();
            }, 500);
        }
      }
    }
    function judgedisprice() {
        var reg = new RegExp("^[0-9]+(.[0-9]{1,2})?$");
        var price = $("#GoodsPrice").val();
        var disprice = $("#DiscountPrice").val();
        if (!reg.test(disprice)) {
            alert("请输入正确价格！");
            setTimeout(function () {
            }, 500);
            document.getElementById("#DiscountPrice").focus();
        }
        else {
            var a = parseFloat(price);
            var b = parseFloat(disprice);
            if (a < b) {
                alert("促销价不能大于价格");
                setTimeout(function () {
                }, 500);
                document.getElementById("#DiscountPrice").focus();
            }
        }
    }

</script>